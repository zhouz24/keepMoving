1、Spring与SpringBoot的区别
    Spring Framewoke提供了多种功能，使得web应用程序的开发更为简单，这些功能包括依赖注入，数据绑定，面向切面的编程，数据访问等等
    SpringBoot采用约定大于配置的思想，提供了自动装配、起步依赖等功能。
2、如何使用Maven设置SpringBoot应用程序
    创建一个普通的maven项目，继承spring-boot-starter-parent项目，声明继承依赖于springboot的启动器，重用springboot的默认配置
    然后添加项目的起步依赖。
3、SpringBoot的starter是什么
    依赖管理对于项目至关重要，当项目变得复杂时，管理依赖项可能变成一场噩梦，因为涉及的组件太多了。springboot的starter由此诞生
    每个starter都可以为我们提供所需要的spring技术的一站式服务，并且以一致的方式传递和管理其他所需的依赖关系。
    所有官方的starter都在org.springframework.boot组下，其名称以“spring-boot-starter-”开头。
    非官方的starter的名称在前，如“mybatis-spring-boot-starter”.
    常用的有
        Spring-boot-starter:核心启动器，包括自动配置支持。
        spring-boot-starter-aop:使用spring AOP和aspectJ面向切面编程
        spring-boot-starter-data-jpa:使用Spring Data JPA和Hibernate的启动器
        spring-boot-starter-jdbc:用于将JDBC于HikariCP连接池一起使用的启动器
        spring-boot-starter-security:spring Security的启动器
        spring-boot-starter-test:spring测试的启动器
        spring-boot-starter-web:使用springMVC构建web的启动器，包括RESTful应用程序
4、spring boot如何禁用特定的自动配置
    如果使用@EnableAutoConfiguration的exclude属性来指示（不加载某项配置）
    如果使用@SpringBootApplication注解，它同样包含了@EnableAutoConfiguration注解，同样使用exclude来禁用某项自动配置
5、spring boot如何注册自定义配置
    要注册自动配置类，必须在META-INF/spring.factories文件的EnableAutoConfiguration中
    配置org.springFrameWork.boot.antoconfigure.EnableAutoConfiguration=配置的全限定名称。
    如果使用maven构建一个项目，那么该文件应放在resource/META-INF目录中。
6、spring boot根据不同的条件加载bean
    可以适应@Conditional系列注解，如@ConditionalOnMissingBean，该注解放在@Bean上，表示当前bean不存在是初始化并注入IOC容器
7、如何将spring boot web应用程序部署为jar或者war包
    传统上，我们将web应用程序打包为WAR文件，然后将其部署到外部服务器中，这样做可以让我们在同一台服务器上安排多个应用程序。
    在CPU和内存稀缺的时候，这是节省资源的方法
    spring通过提供一个插件即spring-boot-maven-plugin来解决这个问题，将web应用打包成可执行的JAR文件，同时将在pom文件中设置为<packaging>jar</packaging>
8、如何在springboot启动的时候运行一些逻辑
    可以实现springboot提供的接口ApplicationRunner,也可以实现接口CommandLineRunner，这两个接口实现的方式一样，都只提供了一个run方法
9、springboot支持哪些外部配置
    springboot支持外部配置，允许我们在各中环境中运行相同的应用程序，可以使用properties文件、yaml文件、环境变量、系统属性等指定配置属性
    application.propertes文件或者application.yaml对应文件加载属性
10、spring boot Actuator有什么用
    spring boot Actuator可以监控和管理spring boot应用，比如健康检查、审计、和Http追踪，所有的这些特性可以通过JMX或者Http endpoints来获得
    Actuator同时还可以与外部应用监控系统整合，比如Prometheus等，这些系统提供了非常好的仪表盘、图标、分析和告警等功能
    Actuator使用Micrometer来整合上面的系统，集成到项目中只需要添加依赖Actuator启动器