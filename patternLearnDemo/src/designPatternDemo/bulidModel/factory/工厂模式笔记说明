工厂模式的主要功能帮助我们实例化对象。对象的实例化通过工厂实现，不是通过new来做。
    将对象实例化的细节封装到工厂，对实例化比较复杂的对象和对象生命周期进行集中管理。

工厂模式共分为3种：
    简单工厂模式：不属于GOF的23中设计模式，用来生产同一等级结构中的任意产品，对于新增加的新的产品，就需要修改工厂类，符合单一职责原则
        破坏了开闭原则。
    工厂方法模式：用来生产同一等级结构中的固定产品，支持增加任意产品，新增产品不用修改原有的工厂，只需要增加该产品对应的工厂，符合单一
        职责原则和开闭原则，但是程序变复杂。
    抽象工厂模式：用来生产不同产品族的全部产品，增加产品时，需要修改工厂，增加产品族时，需要增加工厂，符合单一职责，部分符合开闭原则。

